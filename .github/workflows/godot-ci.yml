name: Godot-CI Export

on:
  push:

env:
  GODOT_VERSION: 4.0.2
  EXPORT_NAME: alien_attack_supreme

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: docker://aorioli/godot-ci:4.0.2
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Setup
        run: |
          mkdir -v -p build/linux build/windows build/mac build/web ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/$GODOT_VERSION.stable ~/.local/share/godot/templates/$GODOT_VERSION.stable
      - name: Windows Build
        run: godot -v --headless --export-release "Windows Desktop" ./build/windows/$EXPORT_NAME.exe
      - name: Upload assets to a Release
        uses: AButler/upload-release-assets@v2.0.2
        with:
          files: ./build/windows/*
          repo-token: ${{ secrets.PAT }}


  export-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    container:
      image: docker://aorioli/godot-ci:4.0.2
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p build/linux build/windows build/mac build/web ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: godot -v --headless --export-release "Linux/X11" ./build/linux/$EXPORT_NAME.x86_64
      - name: Upload assets to a Release
        uses: AButler/upload-release-assets@v2.0.2
        with:
          files: ./build/linux/*
          repo-token: ${{ secrets.PAT }}

  export-web:
    name: Web Export
    runs-on: ubuntu-latest
    container:
      image: docker://aorioli/godot-ci:4.0.2
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p build/linux build/windows build/mac build/web ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: godot -v --headless --export-release "Web" ./build/web/index.html
      - name: "Workaround for SharedArrayBuffer support on GitHub Pages"
        run: |
          cd build/web
          yum install curl
          curl -fsSL https://github.com/gzuidhof/coi-serviceworker/raw/master/coi-serviceworker.js > coi-serviceworker.js
          sed -i 's#\(		<script src="index.js"></script>\)#		<script src="coi-serviceworker.js"></script>\n\1#g' index.html
          cd ../..
      - name: Upload assets to a Release
        uses: AButler/upload-release-assets@v2.0.2
        with:
          files: ./build/web/*
          repo-token: ${{ secrets.PAT }}
      - name: Deploy to GitHub Pages
        if: success() 
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: build/web
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  export-mac:
    name: Mac Export
    runs-on: ubuntu-latest
    container:
      image: docker://aorioli/godot-ci:4.0.2
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p build/linux build/windows build/mac build/web ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: godot -v --headless --export-release "MacOS" ./build/mac/$EXPORT_NAME.zip
      - name: Upload assets to a Release
        uses: AButler/upload-release-assets@v2.0.2
        with:
          files: ./build/mac/*
          repo-token: ${{ secrets.PAT }}
